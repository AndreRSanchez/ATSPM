@using MvcCheckBoxList.Model;
@model SPM.Models.AggDataExportViewModel

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Raw Data Export</title>
</head>
<body>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="panel panel-signal">
        <div class="panel-heading">
            Metric
        </div>
        <div class="panel-body">
            <div class="form-group">
                @Html.CheckBoxListFor(x => x.MetricTypeIDs,
                    x => x.AllMetricTypes,
                    x => x.MetricID,
                    x => x.ChartName,
                    x => x.AllMetricTypes,
                    Position.Vertical)
            </div>
        </div>
    </div>

    <div class="panel panel-signal">
        <div class="panel-heading">
            Signals
        </div>
        <div class="panel-body">
            Load Route:  @Html.DropDownListFor(m=>m.SelectedRouteID, new SelectList(Model.Routes, "Id", "RouteName"), "Select A Route", 
                             new {@onchange = "LoadRoute()"})
    
            <div id="SignalSearchContainer" class="col-md-6 panel-min-width">
                @Html.Partial("~/Views/DefaultCharts/SignalSearch.cshtml", new ViewDataDictionary(Model.SignalSearchViewModel))
            </div>
            
            <div id="RouteSignals">
                
            </div>
        </div>
    </div>

    <div class="panel panel-signal">
        <div class="panel-heading">
            Approach Filter
        </div>
        <div class="panel-body">
            <div class="form-group">
                @Html.CheckBoxListFor(x => x.ApproachTypeIDs,
                    x => x.AllApproachTypes,
                    x => x.DirectionTypeID,
                    x => x.Description,
                    x => x.AllApproachTypes,
                    Position.Vertical)
            </div>
        </div>
    </div>

    <div class="panel panel-signal">
        <div class="panel-heading">
            Movement Type Filter
        </div>
        <div class="panel-body">
            <div class="form-group">
                @Html.CheckBoxListFor(x => x.MovementTypeIDs,
                    x => x.AllMovementTypes,
                    x => x.MovementTypeID,
                    x => x.Description,
                    x => x.AllMovementTypes,
                    Position.Vertical)
            </div>
        </div>
    </div>

    <div class="panel panel-signal">
        <div class="panel-heading">
            Vehicle Type Filter
        </div>
        <div class="panel-body">
            <div class="form-group">
                @Html.CheckBoxListFor(x => x.LaneTypeIDs,
                    x => x.AllLaneTypes,
                    x => x.LaneTypeID,
                    x => x.Description,
                    x => x.AllLaneTypes,
                    Position.Vertical)
            </div>
        </div>
    </div>

    <div class="panel panel-signal">
        <div class="panel-heading">
            Data Aggregation
        </div>
        <div class="panel-body">
            <div class="form-group">
                @Html.CheckBoxListFor(x => x.LaneTypeIDs,
                    x => x.AllLaneTypes,
                    x => x.LaneTypeID,
                    x => x.Description,
                    x => x.AllLaneTypes,
                    Position.Vertical)
            </div>
            <div class="form-group">
                Sum:<input checked="checked"
                           id="Sum"
                           type="radio"
                           value="Sum"/>
                Average:<input checked="checked"
                               id="Sum"
                               type="radio"
                               value="Average" />
            </div>
        </div>
    </div>

    <div class="panel panel-signal">
        <div class="panel-heading">
            Date/Time
        </div>
        <div class="panel-body">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.StartDateDay, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group-custom">
                        @Html.EditorFor(model => model.StartDateDay, new { htmlAttributes = new { @class = "form-control DayWidth datepicker" } })
                    </div>
                </div>
            <div class="col-md-12 col-sm-12 col-xs-12">
                @Html.LabelFor(model => model.EndDateDay, htmlAttributes: new { @class = "control-label" })
                <div class="input-group-custom">
                    @Html.EditorFor(model => model.EndDateDay, new { htmlAttributes = new { @class = "form-control DayWidth datepicker" } })
                </div> 
            </div>
            @*<div class="col-md-12 col-sm-12 col-xs-12">
                @Html.CheckBoxListFor(model => model.WeekdayWeekendIDs, 
                    x => x.SelectedWeekdayWeekend,
                    x => x.WeekdayWeekendIDs,
                    x => x.WeekdayWeekendIDs,
                    x => x.SelectedWeekdayWeekend,
                    Position.Vertical))
            </div>*@
            <div class="col-md-12 col-sm-12 col-xs-12">
                @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label" })
                <div class="input-group-custom">
                    @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control timeWidth", title = "Time component of start date" } })
                    @Html.DropDownList("StartAMPMddl", Model.StartAMPMList, new { @class = "form-control AMPMWidth", title = "AM PM component of start date" })
                </div>
            </div>
            <div class="col-md-12 col-sm-12 col-xs-12">
                @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label" })
                <div class="input-group-custom">
                    @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control timeWidth", title = "Time component of start date" } })
                    @Html.DropDownList("StartAMPMddl", Model.EndAMPMList, new { @class = "form-control AMPMWidth", title = "AM PM component of end date" })
                </div>
            </div>                
            <div class="col-md-12 col-sm-12 col-xs-12">
                @Html.LabelFor(model => model.SelectedBinSize, new { htmlAttributes = new { @class = "control-label" } })
                <div class="input-group-custom">
                    @Html.DropDownListFor(model => model.SelectedBinSize,
                        new SelectList(Model.BinSizeList, 15), new { @id = "SelectedBinSize", @class = "form-control col-md-6" })
                </div>
            </div>
            <div class="col-md-12">
                @*@Html.ValidationMessageFor(model => model.StartTime, "", new { id = "StartTime-error", @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.StartDateDay, "", new { id = "StartDateDay-error", @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.SelectedStartAMPM, "", new { id = "SelectedStartAMPM-error", @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { id = "EndTime-error", @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.EndDateDay, "", new { id = "EndDateDay-error", @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.SelectedEndAMPM, "", new { id = "SelectedEndAMPM-error", @class = "text-danger" })*@
            </div>

            </div>
        </div>

    <div>
        <div class="col-md-2">
            <button id="CreateChart" type="button" class="btn btn-primary">Create Chart &nbsp; <span id='RunReportSpinner' class="glyphicon"></span></button>
        </div>
        <div class="col-md-4">
            <button id="ExportData" type="button" class="btn btn-primary">Export Data &nbsp; <span id='RunReportSpinner' class="glyphicon"></span></button>
        </div>
        <div class="col-md-6">
            <button id="SaveReport" type="button" class="btn btn-primary">Save Report &nbsp; <span id='RunReportSpinner' class="glyphicon"></span></button>
        </div>
    </div>
}
</body>

@section Scripts
{
    <script type="text/javascript" src="~/Scripts/AggregateDataExport.js"></script>
<script> var urlpathGetRouteSignals = '@Url.Action("Details", "Routes")';</script>
}