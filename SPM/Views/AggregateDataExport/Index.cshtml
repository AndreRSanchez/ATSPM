@using MvcCheckBoxList.Model;
@model SPM.Models.AggDataExportViewModel

@using (Ajax.BeginForm("CreateMetric", "AggregateDataExport", new AjaxOptions { InsertionMode = System.Web.Mvc.Ajax.InsertionMode.Replace, UpdateTargetId = "Results", HttpMethod = "POST", OnBegin = "StartReportSpinner()", OnSuccess = "StopReportSpinner()", OnFailure = "StopReportSpinner()" }))
{

    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-7">
            <div class="panel panel-signal">
                <div class="panel-heading">
                    <h5 class="panel-title">
                        <a id="DataAggregation" data-toggle="collapse" href="#collapseDataAggregation">
                            Chart Options
                        </a>
                    </h5>
                </div>
                <div id="collapseDataAggregation" class="panel-body panel-collapse collapse in">
                    <div class="row">
                    <div class="col-md-6 col-sm-6 col-xs-6">
                        @Html.LabelFor(model => model.SelectedMetricType, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.SelectedMetricType, new SelectList(Model.MetricTypes, "MetricId", "ChartName"), new { @class = "form-control" })
                    </div>
                    <div class="col-md-6 col-sm-6 col-xs-6">
                        @Html.LabelFor(model => model.SelectedXAxisType, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.SelectedXAxisType, new SelectList(Model.XAxisTypes), new { @class = "form-control" })
                    </div>
                    <div class="col-md-6 col-sm-6 col-xs-6">
                        @Html.LabelFor(model => model.SelectedSeriesType, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.SelectedSeriesType, new SelectList(Model.SeriesTypes), new { @class = "form-control" })
                    </div>
                    <div class="col-md-6 col-sm-6 col-xs-6">
                        @Html.LabelFor(model => model.SelectedAggregationType, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.SelectedAggregationType, new SelectList(Model.AggregationTypes), new { @class = "form-control" })
                    </div>
                    <div class="col-md-6 col-sm-6 col-xs-6">
                        @Html.LabelFor(model => model.SelectedChartType, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.SelectedChartType, new SelectList(Model.ChartTypesList), new { @class = "form-control" })
                    </div>
                    <div class="col-md-6 col-sm-6 col-xs-6">
                        @Html.LabelFor(model => model.SelectedSeriesWidth, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.SelectedSeriesWidth, new SelectList(Model.SeriesWidths), new { @class = "form-control" })
                    </div>

                        <div class="col-md-6 col-sm-6 col-xs-6">
                            @Html.LabelFor(model => model.SelectedBinSize, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.SelectedBinSize, new SelectList(Model.BinSizes), new { @class = "form-control" })
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-6">
                            @Html.LabelFor(model => model.SelectedDimension, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.SelectedDimension, new SelectList(Model.Dimensions), new { @class = "form-control" })
                        </div>
                </div>
                <div class="row">
                    <div class="col-md-6 col-sm-6 col-xs-6">
                        @Html.LabelFor(model => model.StartDateDay, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group-custom">
                            @Html.EditorFor(model => model.StartDateDay, new { htmlAttributes = new { @class = "form-control DayWidth datepicker" } })
                            @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control timeWidth", title = "Time component of start date" } })
                            @Html.DropDownListFor(model => model.SelectedStartAMPM, Model.StartAMPMList,
                                new { @class = "form-control AMPMWidth", title = "AM PM component of start date" })
                        </div>
                    </div>
                    <div class="col-md-6 col-sm-6 col-xs-6">
                        @Html.LabelFor(model => model.EndDateDay, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group-custom">
                            @Html.EditorFor(model => model.EndDateDay, new { htmlAttributes = new { @class = "form-control DayWidth datepicker" } })
                            @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control timeWidth", title = "Time component of end date" } })
                            @Html.DropDownListFor(model => model.SelectedEndAMPM, Model.EndAMPMList,
                                new { @class = "form-control AMPMWidth", title = "AM PM component of end date" })
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-3">
                        @Html.CheckBoxFor(model => model.Weekdays, false)
                        @Html.LabelFor(model => model.Weekdays, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-3">
                        @Html.CheckBoxFor(model => model.Weekends, false)
                        @Html.LabelFor(model => model.Weekends, new { @class = "control-label" })
                    </div>
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <button id="CreateMetric" type="submit" class="btn btn-primary">Create Chart &nbsp;<span id='RunReportSpinner' class="glyphicon"></span></button>
                    </div>
                </div>
            </div>
            </div>
        </div>


    
    <div class="col-md-5">
        <div class="panel panel-signal">
            <div class="panel-heading">
                <h5 class="panel-title">
                    <a id="Signals" data-toggle="collapse" href="#collapseSignals">
                        Route
                    </a>
                </h5>
            </div>
            <div id="collapseSignals" class="panel-body panel-collapse collapse in">

                <div id="Routes" class="col-md-12">
                    @Html.DropDownListFor(m => m.SelectedRouteId, new SelectList(Model.Routes, "Id", "RouteName"), "Select A Route",
                        new { @onchange = "LoadRoute()", @class = "form-control" })
                </div>
                <Table class="table-striped" id="RouteSignals"></Table>
            </div>
        </div>
    </div>
    </div>
}
        <div id="Results"></div>

        @section Scripts
{
            <script type="text/javascript" src="~/Scripts/AggregateDataExport.js"></script>
            <script type="text/javascript">
        var urlpathGetRouteSignals = '@Url.Action("CreateMetric", "AggregateDataExport")';
            </script>
        }
